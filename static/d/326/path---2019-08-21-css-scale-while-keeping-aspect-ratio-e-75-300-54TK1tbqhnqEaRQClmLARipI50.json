{"data":{"site":{"siteMetadata":{"title":"Growing in the web","author":"Yichaoz"}},"markdownRemark":{"id":"68cf3155-ee97-52dc-8595-c3e8cf21c440","excerpt":"There sometimes we have a div like these :But we would like independently of the screen size, they should always be square, which means has…","html":"<p>There sometimes we have a div like these :</p>\n<p><img src=\"/static/images/uploads/cafdsfdsdpture.jpg\" title=\"divs\"></p>\n<p>But we would like independently of the screen size, they should always be square, which means has exactly the same height as width (which is always 50%), or in order word, we would like to scale it while keeping the same aspect ratio.</p>\n<p>The trick is use <strong>padding in percentage,</strong> why?</p>\n<blockquote>\n<p>padding in percentages is based on width.</p>\n</blockquote>\n<p>Which means, if width is 400px and padding-top is 100%, it will create a padding top of 400px!</p>\n<p>eg. in our case:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.aspect-ratio-box</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding-top</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>we can create a padding with exact same of the width (50% of the screen)</p>\n<p><img src=\"/static/images/uploads/captfgbvccbcvure.jpg\" title=\"50% padding\"></p>\n<p>Now we can just position absolute the photo element and fill the container</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.aspect-ratio-box</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding-top</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.photo</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">bottom</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">right</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> salmon<span class=\"token punctuation\">;</span>\n  ...\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>and we will get the desired look;</p>\n<p><img src=\"/static/images/uploads/cavcvxcvpture.jpg\"></p>\n<p>Using the same concept we can also force the div to be 4:3 ratio or 16:9 ratio;</p>\n<p>eg: <code class=\"language-text\">3/4 = 75%</code> or  <code class=\"language-text\">9/16 = 56.25%</code></p>\n<p><img src=\"/static/images/uploads/captufdsbvre.jpg\"></p>\n<p>sample code: <a href=\"https://codepen.io/kossel/pen/BaBQMYB\">https://codepen.io/kossel/pen/BaBQMYB</a></p>","frontmatter":{"title":"CSS scale content while keeping aspect ratio","date":"August 22, 2019"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"There sometimes we have a div like these :But we would like independently of the screen size, they should always be square, which means has…","fields":{"slug":"/2019-08-21-css-scale-while-keeping-aspect-ratio/"},"frontmatter":{"date":"22 August, 2019","title":"CSS scale content while keeping aspect ratio","tags":["css"]}}},{"node":{"excerpt":"Normally React wants to keep the UI consistent with what you told it to render.\nSo if you renderthen it will have to call render methods and…","fields":{"slug":"/react-time-slicing/"},"frontmatter":{"date":"09 September, 2018","title":"React 16 time slicing trick","tags":["reactjs","javasccript"]}}},{"node":{"excerpt":"Given these classes:Which color would these divs be?Now see the answer ;)https://codepen.io/kossel/pen/PdEdLP","fields":{"slug":"/css-test/"},"frontmatter":{"date":"09 September, 2018","title":"How good are you with css","tags":["css"]}}},{"node":{"excerpt":"Hello world !","fields":{"slug":"/me/"},"frontmatter":{"date":"26 August, 2018","title":"Me","tags":["reactjs","javasccript"]}}},{"node":{"excerpt":"tl;drAccording to React documentationIt just returns You can also see it in the source code (react 16.2.0)When it’s  it does shallow…","fields":{"slug":"/default-implementation-of-shouldcomponentunpdate/"},"frontmatter":{"date":"13 December, 2017","title":"Default implementation of shouldComponentUnpdate","tags":["reactjs","javascript"]}}},{"node":{"excerpt":"In react world, many time we call  and , I do that and saw in many places, however I’ve never asked myself what does it actually do…eg.So…","fields":{"slug":"/why-call-super-or-super-props/"},"frontmatter":{"date":"13 December, 2017","title":"Why call super or super(props)","tags":["reactjs","javasccript"]}}},{"node":{"excerpt":"In React 16.2, improved support for Fragments has been added. More information can be found on React’s blog post here.We are all familiar…","fields":{"slug":"/react-16-fragment-vs-container-divs/"},"frontmatter":{"date":"13 December, 2017","title":"React 16 fragment vs container divs","tags":["reactjs","javascript"]}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2019-08-21-css-scale-while-keeping-aspect-ratio/","previous":{"fields":{"slug":"/react-time-slicing/"},"frontmatter":{"title":"React 16 time slicing trick","tags":["reactjs","javasccript"]}},"next":null}}